plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
}

allure {
    report {
        version.set('2.21.0')
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set('2.21.0') //версия интеграции фреймворка и Allure
            }
        }
    }
}
repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:7.2.1",
            "org.junit.jupiter:junit-jupiter:5.10.2",
            'org.junit.jupiter:junit-jupiter-engine:5.10.2',
            'io.qameta.allure:allure-selenide:2.29.1',
            'io.qameta.allure:allure-junit5:2.20.0',
            'org.junit.jupiter:junit-jupiter-api:5.8.1',
            'com.github.javafaker:javafaker:1.0.2',
            'org.slf4j:slf4j-simple:2.0.7' // для улучшения логиров

    )
    dependencies {
        testImplementation 'io.qameta.allure:allure-junit5:2.20.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())//для прокидывания переменных внутрь кода из вне (jenkins)
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task all_test(type: Test) {
    useJUnitPlatform {
        includeTags("start")
    }
}
compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}